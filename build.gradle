plugins {
  id 'java'
  id 'fabric-loom' version '1.11-SNAPSHOT'
  id 'com.modrinth.minotaur' version '2.8.7'
}

group = project.group
version = project.modVersion

java {
  toolchain { languageVersion = JavaLanguageVersion.of(project.javaVersion as int) }
  withJavadocJar()
  withSourcesJar()
}

repositories {
  mavenCentral()
  maven { url = 'https://maven.fabricmc.net/' }
}

dependencies {
  compileOnly "net.luckperms:api:5.4"
  compileOnly "me.lucko:fabric-permissions-api:${permissionsApiVersion}"
  implementation 'blue.endless:jankson:1.2.3'
  implementation 'com.google.guava:guava:33.2.1-jre'

  minecraft "com.mojang:minecraft:${minecraftVersion}"
  mappings "net.fabricmc:yarn:${mappings}:v2"
  modImplementation "net.fabricmc:fabric-loader:${fabricLoaderVersion}"
  modImplementation "net.fabricmc.fabric-api:fabric-api:${fabricApiVersion}"

  // Fabric Permissions API (LuckPerms compatible)

  // MinCore is a hard dependency declared in fabric.mod.json.
  // IMPORTANT: Do NOT bundle MinCore. Modrinth will auto-resolve based on dependency metadata.
  // Example (when MinCore is available on a Maven repo):
  // modImplementation "dev.mincore:mincore:0.2.0"
}

tasks.withType(JavaCompile).configureEach {
  options.release = project.javaVersion as int
  options.encoding = 'UTF-8'
}

loom {
  runs {
    server {
      server()
      name "MinEmotes Dev Server"
      vmArg "-Dfabric.log.level=info"
    }
  }
}

modrinth {
  token = project.findProperty("modrinthToken") ?: System.getenv("MODRINTH_TOKEN")
  projectId = project.findProperty("modrinthProjectId") ?: "REPLACE_WITH_MINEMOTES_PROJECT_ID"
  versionNumber = project.modVersion
  versionName = "MinEmotes ${project.modVersion}"
  changelog = project.findProperty("modChangelog") ?: "Initial skeleton"
  uploadFile = tasks.remapJar
  gameVersions = [ project.minecraftVersion ]
  loaders = [ "fabric" ]
  dependencies {
  compileOnly "net.luckperms:api:5.4"
  compileOnly "me.lucko:fabric-permissions-api:${permissionsApiVersion}"

    required.project(project.findProperty("modrinthMinCoreId") ?: "REPLACE_WITH_MINCORE_PROJECT_ID")
  }
}

dependencies {
  compileOnly "net.luckperms:api:5.4"
  compileOnly "me.lucko:fabric-permissions-api:${permissionsApiVersion}"

  testImplementation platform("org.junit:junit-bom:5.10.2")
  testImplementation "org.junit.jupiter:junit-jupiter"
  def mockitoVersion = '5.2.0'
  testImplementation "org.mockito:mockito-core:${mockitoVersion}"
  testImplementation "org.mockito:mockito-inline:${mockitoVersion}"
}
tasks.test { useJUnitPlatform() }
